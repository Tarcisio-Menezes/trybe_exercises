{"ast":null,"code":"var _jsxFileName = \"/home/tarcisio/trybe_exercises/bloco_18/dia_2/trybe-questions/src/context/QuestionsProvider.js\";\nimport React, { useState } from 'react';\nimport { getQuestions } from '../services/api';\nimport QuestionContext from './QuestionsContext';\n\nconst QuestionsProvider = ({\n  children\n}) => {\n  const [questions, setQuestion] = useState([]); // [state , setter]\n\n  const [isLoading, setIsLoading] = useState(false);\n\n  async function fetchQuestion() {\n    // setar loading true\n    // fazer a chamada da api\n    // guardar os dados da api\n    // setar loading false\n    setIsLoading(true);\n    const questionAPI = await getQuestions();\n    setQuestion(questionAPI);\n    setIsLoading(false);\n  }\n\n  return /*#__PURE__*/React.createElement(QuestionContext.Provider, {\n    value: {\n      questions,\n      isLoading,\n      fetchQuestion\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nexport default QuestionsProvider; // this.state = {\n//   question: [],\n//   isLoading: false,\n// }\n// this.setState({question: valor})","map":{"version":3,"sources":["/home/tarcisio/trybe_exercises/bloco_18/dia_2/trybe-questions/src/context/QuestionsProvider.js"],"names":["React","useState","getQuestions","QuestionContext","QuestionsProvider","children","questions","setQuestion","isLoading","setIsLoading","fetchQuestion","questionAPI"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,YAAT,QAA6B,iBAA7B;AAEA,OAAOC,eAAP,MAA4B,oBAA5B;;AAEA,MAAMC,iBAAiB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC1C,QAAM,CAACC,SAAD,EAAYC,WAAZ,IAA2BN,QAAQ,CAAC,EAAD,CAAzC,CAD0C,CACK;;AAC/C,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,KAAD,CAA1C;;AAEA,iBAAeS,aAAf,GAA+B;AAC7B;AACA;AACA;AACA;AACAD,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,UAAME,WAAW,GAAG,MAAMT,YAAY,EAAtC;AACAK,IAAAA,WAAW,CAACI,WAAD,CAAX;AACAF,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;;AAED,sBACE,oBAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAG;AAAEH,MAAAA,SAAF;AAAaE,MAAAA,SAAb;AAAwBE,MAAAA;AAAxB,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIL,QADJ,CADF;AAKD,CApBD;;AAsBA,eAAeD,iBAAf,C,CAEA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { useState } from 'react';\nimport { getQuestions } from '../services/api';\n\nimport QuestionContext from './QuestionsContext';\n\nconst QuestionsProvider = ({ children }) => {\n  const [questions, setQuestion] = useState([]); // [state , setter]\n  const [isLoading, setIsLoading] = useState(false);\n\n  async function fetchQuestion() {\n    // setar loading true\n    // fazer a chamada da api\n    // guardar os dados da api\n    // setar loading false\n    setIsLoading(true);\n    const questionAPI = await getQuestions();\n    setQuestion(questionAPI);\n    setIsLoading(false);\n  }\n\n  return (\n    <QuestionContext.Provider value={ { questions, isLoading, fetchQuestion } }>\n      { children }\n    </QuestionContext.Provider>\n  );\n};\n\nexport default QuestionsProvider;\n\n// this.state = {\n//   question: [],\n//   isLoading: false,\n// }\n\n// this.setState({question: valor})\n"]},"metadata":{},"sourceType":"module"}